{
    "repo": "maven-shared-io",
    "bugs": [
        {
            "repo": "maven-shared-io",
            "bug_id": "ClasspathResourceLocatorStrategy_69",
            "npe_info": {
                "filepath": "src/main/java/org/apache/maven/shared/io/location/ClasspathResourceLocatorStrategy.java",
                "line": 71,
                "deref_field": "resource",
                "npe_class": "ClasspathResourceLocatorStrategy",
                "npe_method": "resolve",
                "sink_field": null,
                "jvmti_identify_succeed": null,
                "is_original": null
            },
            "build_info": {
                "compiled": true,
                "build_command": "mvn test-compile -V -B -Denforcer.skip=true -Dcheckstyle.skip=true -Dcobertura.skip=true -Drat.skip=true -Dlicense.skip=true -Dfindbugs.skip=true -Dgpg.skip=true -Dskip.npm=true -Dskip.gulp=true -Dskip.bower=true",
                "java_version": 8,
                "error_message": null,
                "time": 4.378021880052984
            },
            "test_info": {
                "test_command": "mvn test -V -B -Denforcer.skip=true -Dcheckstyle.skip=true -Dcobertura.skip=true -Drat.skip=true -Dlicense.skip=true -Dfindbugs.skip=true -Dgpg.skip=true -Dskip.npm=true -Dskip.gulp=true -Dskip.bower=true",
                "fail_buggy": true,
                "pass_fixed": true,
                "testcases": [
                    {
                        "classname": "org.apache.maven.shared.io.location.ClasspathResourceLocatorStrategyTest",
                        "method": "testShouldFailToResolveMissingClasspathResource",
                        "exn_type": "junit.framework.AssertionFailedError",
                        "stack_trace": "junit.framework.AssertionFailedError: Expected: <null> but was: org.apache.maven.shared.io.location.URLLocation@942a29c\n\tat org.apache.maven.shared.io.location.ClasspathResourceLocatorStrategyTest.testShouldFailToResolveMissingClasspathResource(ClasspathResourceLocatorStrategyTest.java:46)\n"
                    }
                ]
            },
            "patches": [],
            "time_to_generate_patches": 0
        },
        {
            "repo": "maven-shared-io",
            "bug_id": "DefaultMessageHolder_293",
            "npe_info": {
                "filepath": "src/main/java/org/apache/maven/shared/io/logging/DefaultMessageHolder.java",
                "line": 299,
                "deref_field": "error",
                "npe_class": "Message",
                "npe_method": "render",
                "sink_field": null,
                "jvmti_identify_succeed": null,
                "is_original": null
            },
            "build_info": {
                "compiled": true,
                "build_command": "mvn test-compile -V -B -Denforcer.skip=true -Dcheckstyle.skip=true -Dcobertura.skip=true -Drat.skip=true -Dlicense.skip=true -Dfindbugs.skip=true -Dgpg.skip=true -Dskip.npm=true -Dskip.gulp=true -Dskip.bower=true",
                "java_version": 8,
                "error_message": null,
                "time": 4.5760572489816695
            },
            "test_info": {
                "test_command": "mvn test -V -B -Denforcer.skip=true -Dcheckstyle.skip=true -Dcobertura.skip=true -Drat.skip=true -Dlicense.skip=true -Dfindbugs.skip=true -Dgpg.skip=true -Dskip.npm=true -Dskip.gulp=true -Dskip.bower=true",
                "fail_buggy": true,
                "pass_fixed": true,
                "testcases": [
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testNewMessageThenAppendOnlyIncrementsSizeByOne",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testAddMessageWithErrorThenWithJustMessageIncrementsSizeByTwo(DefaultMessageHolderTest.java:258)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testAppendCharSequence",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testAppendCreatesNewMessageIfNoneCurrent(DefaultMessageHolderTest.java:64)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testNewMessageThenAppendTwiceOnlyIncrementsSizeByOne",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testNewMessageThenAppendOnlyIncrementsSizeByOne(DefaultMessageHolderTest.java:112)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.location.FileLocatorStrategyTest",
                        "method": "testShouldFailToResolveNonExistentFileLocation",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.location.FileLocatorStrategyTest.testShouldFailToResolveNonExistentFileLocation(FileLocatorStrategyTest.java:65)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testAddMessageWithErrorThenWithJustMessageIncrementsSizeByTwo",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testAppendCreatesNewMessageIfNoneCurrent(DefaultMessageHolderTest.java:64)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testAppendCharSequence",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testNewMessageIncrementsSizeWhenEmpty(DefaultMessageHolderTest.java:46)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testAppendCreatesNewMessageIfNoneCurrent",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testAppendCharSequence(DefaultMessageHolderTest.java:301)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testAddMessageIncrementsSizeByOne",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testAddMessageWithErrorThenWithJustMessageIncrementsSizeByTwo(DefaultMessageHolderTest.java:258)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testAddMessageWithErrorThenWithJustMessageIncrementsSizeByTwo",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testAddMessageTwiceIncrementsSizeByTwo(DefaultMessageHolderTest.java:207)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testAddMessageWithErrorThenWithJustMessageIncrementsSizeByTwo",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testNewMessageIncrementsSizeWhenEmpty(DefaultMessageHolderTest.java:46)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testAddMessageTwiceIncrementsSizeByTwo",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testAppendCreatesNewMessageIfNoneCurrent(DefaultMessageHolderTest.java:64)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testAddMessageTwiceIncrementsSizeByTwo",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testNewMessageIncrementsSizeWhenEmpty(DefaultMessageHolderTest.java:46)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testAppendCreatesNewMessageIfNoneCurrent",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testAddMessageIncrementsSizeByOne(DefaultMessageHolderTest.java:189)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testNewMessageIncrementsSizeWhenEmpty",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testAppendCharSequence(DefaultMessageHolderTest.java:301)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest",
                        "method": "testShouldResolveSpecWithMoreThanFiveTokens",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest.testShouldNotResolveSpecToArtifactWithNullFile(ArtifactLocatorStrategyTest.java:411)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testNewMessageThenAppendOnlyIncrementsSizeByOne",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testNewMessageThenAppendTwiceOnlyIncrementsSizeByOne(DefaultMessageHolderTest.java:140)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testAddMessageIncrementsSizeByOne",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testNewMessageThenAppendTwiceOnlyIncrementsSizeByOne(DefaultMessageHolderTest.java:140)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testNewMessageThenAppendTwiceOnlyIncrementsSizeByOne",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testAppendCharSequence(DefaultMessageHolderTest.java:301)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testNewMessageThenAppendOnlyIncrementsSizeByOne",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testAppendCreatesNewMessageIfNoneCurrent(DefaultMessageHolderTest.java:64)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest",
                        "method": "testShouldResolveSpecWithMoreThanFiveTokens",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest.testShouldResolveSpecWithMoreThanFiveTokens(ArtifactLocatorStrategyTest.java:368)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testNewMessageThenAppendOnlyIncrementsSizeByOne",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testAddMessageTwiceIncrementsSizeByTwo(DefaultMessageHolderTest.java:207)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testAppendCharSequence",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testAppendCharSequence(DefaultMessageHolderTest.java:301)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testNewMessageThenAppendOnlyIncrementsSizeByOne",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testNewMessageIncrementsSizeWhenEmpty(DefaultMessageHolderTest.java:46)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testAppendCreatesNewMessageIfNoneCurrent",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testNewMessageThenAppendOnlyIncrementsSizeByOne(DefaultMessageHolderTest.java:112)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testAddMessageWithErrorThenWithJustMessageIncrementsSizeByTwo",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testAppendCharSequence(DefaultMessageHolderTest.java:301)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testNewMessageThenAppendTwiceOnlyIncrementsSizeByOne",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testNewMessageThenAppendTwiceOnlyIncrementsSizeByOne(DefaultMessageHolderTest.java:140)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testAddMessageIncrementsSizeByOne",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testAppendCreatesNewMessageIfNoneCurrent(DefaultMessageHolderTest.java:64)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testAddMessageIncrementsSizeByOne",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testAddMessageTwiceIncrementsSizeByTwo(DefaultMessageHolderTest.java:207)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testAddMessageIncrementsSizeByOne",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testNewMessageIncrementsSizeWhenEmpty(DefaultMessageHolderTest.java:46)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testAddMessageTwiceIncrementsSizeByTwo",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testAppendCharSequence(DefaultMessageHolderTest.java:301)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testAppendCharSequence",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testAddMessageIncrementsSizeByOne(DefaultMessageHolderTest.java:189)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testNewMessageIncrementsSizeWhenEmpty",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testAddMessageTwiceIncrementsSizeByTwo(DefaultMessageHolderTest.java:207)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest",
                        "method": "testShouldNotResolveSpecToArtifactWithNullFile",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest.testShouldNotResolveSpecToArtifactWithNullFile(ArtifactLocatorStrategyTest.java:411)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testAddMessageWithErrorThenWithJustMessageIncrementsSizeByTwo",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testAddMessageIncrementsSizeByOne(DefaultMessageHolderTest.java:189)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.download.DefaultDownloadManagerTest",
                        "method": "testShouldDownloadFromTempFileTwiceAndUseCache",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.download.DefaultDownloadManagerTest.testShouldFailToDownloadWhenWagonDisconnectThrowsConnectionException(DefaultDownloadManagerTest.java:346)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.download.DefaultDownloadManagerTest",
                        "method": "testShouldDownloadFromTempFileTwiceAndUseCache",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.download.DefaultDownloadManagerTest.testShouldDownloadFromTempFileTwiceAndUseCache(DefaultDownloadManagerTest.java:145)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testAppendCreatesNewMessageIfNoneCurrent",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testAddMessageWithErrorThenWithJustMessageIncrementsSizeByTwo(DefaultMessageHolderTest.java:258)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testNewMessageThenAppendTwiceOnlyIncrementsSizeByOne",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testAddMessageTwiceIncrementsSizeByTwo(DefaultMessageHolderTest.java:207)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest",
                        "method": "testShouldNotResolveSpecToArtifactWithNullFile",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest.testShouldResolveSpecWithMoreThanFiveTokens(ArtifactLocatorStrategyTest.java:368)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testAppendCharSequence",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testAddMessageTwiceIncrementsSizeByTwo(DefaultMessageHolderTest.java:207)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testNewMessageIncrementsSizeWhenEmpty",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testAddMessageWithErrorThenWithJustMessageIncrementsSizeByTwo(DefaultMessageHolderTest.java:258)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testNewMessageThenAppendOnlyIncrementsSizeByOne",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testAppendCharSequence(DefaultMessageHolderTest.java:301)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testAppendCharSequence",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testNewMessageThenAppendOnlyIncrementsSizeByOne(DefaultMessageHolderTest.java:112)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testAddMessageWithErrorThenWithJustMessageIncrementsSizeByTwo",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testNewMessageThenAppendOnlyIncrementsSizeByOne(DefaultMessageHolderTest.java:112)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testAddMessageIncrementsSizeByOne",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testAppendCharSequence(DefaultMessageHolderTest.java:301)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testAddMessageTwiceIncrementsSizeByTwo",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testAddMessageTwiceIncrementsSizeByTwo(DefaultMessageHolderTest.java:207)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testAppendCreatesNewMessageIfNoneCurrent",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testNewMessageThenAppendTwiceOnlyIncrementsSizeByOne(DefaultMessageHolderTest.java:140)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testNewMessageThenAppendTwiceOnlyIncrementsSizeByOne",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testAddMessageWithErrorThenWithJustMessageIncrementsSizeByTwo(DefaultMessageHolderTest.java:258)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testNewMessageThenAppendOnlyIncrementsSizeByOne",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testAddMessageIncrementsSizeByOne(DefaultMessageHolderTest.java:189)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testAddMessageTwiceIncrementsSizeByTwo",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testNewMessageThenAppendOnlyIncrementsSizeByOne(DefaultMessageHolderTest.java:112)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testAddMessageIncrementsSizeByOne",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testAddMessageIncrementsSizeByOne(DefaultMessageHolderTest.java:189)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testNewMessageIncrementsSizeWhenEmpty",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testNewMessageThenAppendTwiceOnlyIncrementsSizeByOne(DefaultMessageHolderTest.java:140)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.download.DefaultDownloadManagerTest",
                        "method": "testShouldFailToDownloadWhenWagonDisconnectThrowsConnectionException",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.download.DefaultDownloadManagerTest.testShouldFailToDownloadWhenWagonDisconnectThrowsConnectionException(DefaultDownloadManagerTest.java:346)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.download.DefaultDownloadManagerTest",
                        "method": "testShouldFailToDownloadWhenWagonDisconnectThrowsConnectionException",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.download.DefaultDownloadManagerTest.testShouldDownloadFromTempFileTwiceAndUseCache(DefaultDownloadManagerTest.java:145)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testAppendCharSequence",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testAddMessageWithErrorThenWithJustMessageIncrementsSizeByTwo(DefaultMessageHolderTest.java:258)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testNewMessageIncrementsSizeWhenEmpty",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testAddMessageIncrementsSizeByOne(DefaultMessageHolderTest.java:189)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testAddMessageWithErrorThenWithJustMessageIncrementsSizeByTwo",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testAddMessageWithErrorThenWithJustMessageIncrementsSizeByTwo(DefaultMessageHolderTest.java:258)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testAppendCreatesNewMessageIfNoneCurrent",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testAppendCreatesNewMessageIfNoneCurrent(DefaultMessageHolderTest.java:64)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testAppendCreatesNewMessageIfNoneCurrent",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testAddMessageTwiceIncrementsSizeByTwo(DefaultMessageHolderTest.java:207)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testAppendCreatesNewMessageIfNoneCurrent",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testNewMessageIncrementsSizeWhenEmpty(DefaultMessageHolderTest.java:46)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testAddMessageTwiceIncrementsSizeByTwo",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testAddMessageWithErrorThenWithJustMessageIncrementsSizeByTwo(DefaultMessageHolderTest.java:258)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testNewMessageThenAppendTwiceOnlyIncrementsSizeByOne",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testAddMessageIncrementsSizeByOne(DefaultMessageHolderTest.java:189)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testNewMessageIncrementsSizeWhenEmpty",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testAppendCreatesNewMessageIfNoneCurrent(DefaultMessageHolderTest.java:64)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testNewMessageThenAppendOnlyIncrementsSizeByOne",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testNewMessageThenAppendOnlyIncrementsSizeByOne(DefaultMessageHolderTest.java:112)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testNewMessageIncrementsSizeWhenEmpty",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testNewMessageIncrementsSizeWhenEmpty(DefaultMessageHolderTest.java:46)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testAppendCharSequence",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testNewMessageThenAppendTwiceOnlyIncrementsSizeByOne(DefaultMessageHolderTest.java:140)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testAddMessageIncrementsSizeByOne",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testNewMessageThenAppendOnlyIncrementsSizeByOne(DefaultMessageHolderTest.java:112)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testAddMessageWithErrorThenWithJustMessageIncrementsSizeByTwo",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testNewMessageThenAppendTwiceOnlyIncrementsSizeByOne(DefaultMessageHolderTest.java:140)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testNewMessageThenAppendTwiceOnlyIncrementsSizeByOne",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testAppendCreatesNewMessageIfNoneCurrent(DefaultMessageHolderTest.java:64)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testNewMessageIncrementsSizeWhenEmpty",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testNewMessageThenAppendOnlyIncrementsSizeByOne(DefaultMessageHolderTest.java:112)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testAddMessageTwiceIncrementsSizeByTwo",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testNewMessageThenAppendTwiceOnlyIncrementsSizeByOne(DefaultMessageHolderTest.java:140)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testNewMessageThenAppendTwiceOnlyIncrementsSizeByOne",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testNewMessageIncrementsSizeWhenEmpty(DefaultMessageHolderTest.java:46)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.logging.DefaultMessageHolderTest",
                        "method": "testAddMessageTwiceIncrementsSizeByTwo",
                        "exn_type": "java.lang.NullPointerException",
                        "stack_trace": "java.lang.NullPointerException\n\tat org.apache.maven.shared.io.logging.DefaultMessageHolderTest.testAddMessageIncrementsSizeByOne(DefaultMessageHolderTest.java:189)\n"
                    }
                ]
            },
            "patches": [],
            "time_to_generate_patches": 0
        },
        {
            "repo": "maven-shared-io",
            "bug_id": "ArtifactLocatorStrategy_150",
            "npe_info": {
                "filepath": "src/main/java/org/apache/maven/shared/io/location/ArtifactLocatorStrategy.java",
                "line": 156,
                "deref_field": "classifier",
                "npe_class": "ArtifactLocatorStrategy",
                "npe_method": "resolve",
                "sink_field": null,
                "jvmti_identify_succeed": null,
                "is_original": null
            },
            "build_info": {
                "compiled": true,
                "build_command": "mvn test-compile -V -B -Denforcer.skip=true -Dcheckstyle.skip=true -Dcobertura.skip=true -Drat.skip=true -Dlicense.skip=true -Dfindbugs.skip=true -Dgpg.skip=true -Dskip.npm=true -Dskip.gulp=true -Dskip.bower=true",
                "java_version": 8,
                "error_message": null,
                "time": 4.24966340418905
            },
            "test_info": {
                "test_command": "mvn test -V -B -Denforcer.skip=true -Dcheckstyle.skip=true -Dcobertura.skip=true -Drat.skip=true -Dlicense.skip=true -Dfindbugs.skip=true -Dgpg.skip=true -Dskip.npm=true -Dskip.gulp=true -Dskip.bower=true",
                "fail_buggy": true,
                "pass_fixed": true,
                "testcases": [
                    {
                        "classname": "org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest",
                        "method": "testShouldNotResolveSpecToArtifactWithNullFile",
                        "exn_type": "java.lang.AssertionError",
                        "stack_trace": "java.lang.AssertionError: \n\n  Unexpected method call ArtifactFactory.createArtifactWithClassifier(\"group\", \"artifact\", \"version\", \"zip\", null):\n    ArtifactFactory.createArtifact(\"group\", \"artifact\", \"version\", null, \"zip\"): expected: 1, actual: 0\n\tat org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest.testShouldResolveSpecWithThreeTokensUsingCustomizedDefaultType(ArtifactLocatorStrategyTest.java:184)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest",
                        "method": "testShouldResolveSpecWithThreeTokensUsingCustomizedDefaultType",
                        "exn_type": "java.lang.AssertionError",
                        "stack_trace": "java.lang.AssertionError: \n\n  Unexpected method call ArtifactFactory.createArtifactWithClassifier(\"group\", \"artifact\", \"version\", \"zip\", null):\n    ArtifactFactory.createArtifact(\"group\", \"artifact\", \"version\", null, \"zip\"): expected: 1, actual: 0\n\tat org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest.testShouldResolveSpecWithThreeTokensUsingCustomizedDefaultType(ArtifactLocatorStrategyTest.java:184)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest",
                        "method": "testShouldResolveSpecWithThreeTokensUsingDefaultType",
                        "exn_type": "java.lang.AssertionError",
                        "stack_trace": "java.lang.AssertionError: \n\n  Unexpected method call ArtifactFactory.createArtifactWithClassifier(\"group\", \"artifact\", \"version\", \"jar\", null):\n    ArtifactFactory.createArtifact(\"group\", \"artifact\", \"version\", null, \"jar\"): expected: 1, actual: 0\n\tat org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest.testShouldNotResolveSpecToArtifactWithNullFile(ArtifactLocatorStrategyTest.java:406)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest",
                        "method": "testShouldNotResolveSpecToArtifactWithNullFile",
                        "exn_type": "java.lang.AssertionError",
                        "stack_trace": "java.lang.AssertionError: \n\n  Unexpected method call ArtifactFactory.createArtifactWithClassifier(\"group\", \"artifact\", \"version\", \"jar\", null):\n    ArtifactFactory.createArtifact(\"group\", \"artifact\", \"version\", null, \"jar\"): expected: 1, actual: 0\n\tat org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest.testShouldNotResolveSpecToArtifactWithNullFile(ArtifactLocatorStrategyTest.java:406)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest",
                        "method": "testShouldResolveSpecWithThreeTokensUsingDefaultType",
                        "exn_type": "java.lang.AssertionError",
                        "stack_trace": "java.lang.AssertionError: \n\n  Unexpected method call ArtifactFactory.createArtifactWithClassifier(\"group\", \"artifact\", \"version\", \"jar\", null):\n    ArtifactFactory.createArtifact(\"group\", \"artifact\", \"version\", null, \"jar\"): expected: 1, actual: 0\n\tat org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest.testShouldResolveSpecWithThreeTokensUsingDefaultType(ArtifactLocatorStrategyTest.java:140)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest",
                        "method": "testShouldResolveSpecWithThreeTokensUsingDefaultType",
                        "exn_type": "java.lang.AssertionError",
                        "stack_trace": "java.lang.AssertionError: \n\n  Unexpected method call ArtifactFactory.createArtifactWithClassifier(\"group\", \"artifact\", \"version\", \"zip\", null):\n    ArtifactFactory.createArtifact(\"group\", \"artifact\", \"version\", null, \"zip\"): expected: 1, actual: 0\n\tat org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest.testShouldResolveSpecWithFourTokens(ArtifactLocatorStrategyTest.java:228)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest",
                        "method": "testShouldNotResolveSpecToArtifactWithNullFile",
                        "exn_type": "java.lang.AssertionError",
                        "stack_trace": "java.lang.AssertionError: \n\n  Unexpected method call ArtifactFactory.createArtifactWithClassifier(\"group\", \"artifact\", \"version\", \"jar\", null):\n    ArtifactFactory.createArtifact(\"group\", \"artifact\", \"version\", null, \"jar\"): expected: 1, actual: 0\n\tat org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest.testShouldResolveSpecWithThreeTokensUsingDefaultType(ArtifactLocatorStrategyTest.java:140)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest",
                        "method": "testShouldResolveSpecWithThreeTokensUsingCustomizedDefaultType",
                        "exn_type": "java.lang.AssertionError",
                        "stack_trace": "java.lang.AssertionError: \n\n  Unexpected method call ArtifactFactory.createArtifactWithClassifier(\"group\", \"artifact\", \"version\", \"jar\", null):\n    ArtifactFactory.createArtifact(\"group\", \"artifact\", \"version\", null, \"jar\"): expected: 1, actual: 0\n\tat org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest.testShouldNotResolveSpecToArtifactWithNullFile(ArtifactLocatorStrategyTest.java:406)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest",
                        "method": "testShouldNotResolveSpecToArtifactWithNullFile",
                        "exn_type": "java.lang.AssertionError",
                        "stack_trace": "java.lang.AssertionError: \n\n  Unexpected method call ArtifactFactory.createArtifactWithClassifier(\"group\", \"artifact\", \"version\", \"zip\", null):\n    ArtifactFactory.createArtifact(\"group\", \"artifact\", \"version\", null, \"zip\"): expected: 1, actual: 0\n\tat org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest.testShouldResolveSpecWithFourTokens(ArtifactLocatorStrategyTest.java:228)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest",
                        "method": "testShouldResolveSpecWithThreeTokensUsingCustomizedDefaultType",
                        "exn_type": "java.lang.AssertionError",
                        "stack_trace": "java.lang.AssertionError: \n\n  Unexpected method call ArtifactFactory.createArtifactWithClassifier(\"group\", \"artifact\", \"version\", \"jar\", null):\n    ArtifactFactory.createArtifact(\"group\", \"artifact\", \"version\", null, \"jar\"): expected: 1, actual: 0\n\tat org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest.testShouldResolveSpecWithThreeTokensUsingDefaultType(ArtifactLocatorStrategyTest.java:140)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest",
                        "method": "testShouldResolveSpecWithThreeTokensUsingCustomizedDefaultType",
                        "exn_type": "java.lang.AssertionError",
                        "stack_trace": "java.lang.AssertionError: \n\n  Unexpected method call ArtifactFactory.createArtifactWithClassifier(\"group\", \"artifact\", \"version\", \"zip\", null):\n    ArtifactFactory.createArtifact(\"group\", \"artifact\", \"version\", null, \"zip\"): expected: 1, actual: 0\n\tat org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest.testShouldResolveSpecWithFourTokens(ArtifactLocatorStrategyTest.java:228)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest",
                        "method": "testShouldNotResolveWhenArtifactNotFoundExceptionThrown",
                        "exn_type": "java.lang.AssertionError",
                        "stack_trace": "java.lang.AssertionError: \n\n  Unexpected method call ArtifactFactory.createArtifactWithClassifier(\"group\", \"artifact\", \"version\", \"jar\", null):\n    ArtifactFactory.createArtifact(\"group\", \"artifact\", \"version\", null, \"jar\"): expected: 1, actual: 0\n\tat org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest.testShouldNotResolveWhenArtifactNotFoundExceptionThrown(ArtifactLocatorStrategyTest.java:450)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest",
                        "method": "testShouldNotResolveWhenArtifactResolutionExceptionThrown",
                        "exn_type": "java.lang.AssertionError",
                        "stack_trace": "java.lang.AssertionError: \n\n  Unexpected method call ArtifactFactory.createArtifactWithClassifier(\"group\", \"artifact\", \"version\", \"jar\", null):\n    ArtifactFactory.createArtifact(\"group\", \"artifact\", \"version\", null, \"jar\"): expected: 1, actual: 0\n\tat org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest.testShouldNotResolveWhenArtifactNotFoundExceptionThrown(ArtifactLocatorStrategyTest.java:450)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest",
                        "method": "testShouldNotResolveWhenArtifactNotFoundExceptionThrown",
                        "exn_type": "java.lang.AssertionError",
                        "stack_trace": "java.lang.AssertionError: \n\n  Unexpected method call ArtifactFactory.createArtifactWithClassifier(\"group\", \"artifact\", \"version\", \"jar\", null):\n    ArtifactFactory.createArtifact(\"group\", \"artifact\", \"version\", null, \"jar\"): expected: 1, actual: 0\n\tat org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest.testShouldNotResolveWhenArtifactResolutionExceptionThrown(ArtifactLocatorStrategyTest.java:496)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest",
                        "method": "testShouldNotResolveWhenArtifactResolutionExceptionThrown",
                        "exn_type": "java.lang.AssertionError",
                        "stack_trace": "java.lang.AssertionError: \n\n  Unexpected method call ArtifactFactory.createArtifactWithClassifier(\"group\", \"artifact\", \"version\", \"jar\", null):\n    ArtifactFactory.createArtifact(\"group\", \"artifact\", \"version\", null, \"jar\"): expected: 1, actual: 0\n\tat org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest.testShouldNotResolveWhenArtifactResolutionExceptionThrown(ArtifactLocatorStrategyTest.java:496)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest",
                        "method": "testShouldNotResolveWhenArtifactNotFoundExceptionThrown",
                        "exn_type": "java.lang.AssertionError",
                        "stack_trace": "java.lang.AssertionError: \n\n  Unexpected method call ArtifactFactory.createArtifactWithClassifier(\"group\", \"artifact\", \"version\", \"zip\", null):\n    ArtifactFactory.createArtifact(\"group\", \"artifact\", \"version\", null, \"zip\"): expected: 1, actual: 0\n\tat org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest.testShouldResolveSpecWithThreeTokensUsingCustomizedDefaultType(ArtifactLocatorStrategyTest.java:184)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest",
                        "method": "testShouldNotResolveWhenArtifactResolutionExceptionThrown",
                        "exn_type": "java.lang.AssertionError",
                        "stack_trace": "java.lang.AssertionError: \n\n  Unexpected method call ArtifactFactory.createArtifactWithClassifier(\"group\", \"artifact\", \"version\", \"zip\", null):\n    ArtifactFactory.createArtifact(\"group\", \"artifact\", \"version\", null, \"zip\"): expected: 1, actual: 0\n\tat org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest.testShouldResolveSpecWithThreeTokensUsingCustomizedDefaultType(ArtifactLocatorStrategyTest.java:184)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest",
                        "method": "testShouldResolveSpecWithFourTokens",
                        "exn_type": "java.lang.AssertionError",
                        "stack_trace": "java.lang.AssertionError: \n\n  Unexpected method call ArtifactFactory.createArtifactWithClassifier(\"group\", \"artifact\", \"version\", \"jar\", null):\n    ArtifactFactory.createArtifact(\"group\", \"artifact\", \"version\", null, \"jar\"): expected: 1, actual: 0\n\tat org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest.testShouldNotResolveWhenArtifactNotFoundExceptionThrown(ArtifactLocatorStrategyTest.java:450)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest",
                        "method": "testShouldResolveSpecWithFourTokens",
                        "exn_type": "java.lang.AssertionError",
                        "stack_trace": "java.lang.AssertionError: \n\n  Unexpected method call ArtifactFactory.createArtifactWithClassifier(\"group\", \"artifact\", \"version\", \"jar\", null):\n    ArtifactFactory.createArtifact(\"group\", \"artifact\", \"version\", null, \"jar\"): expected: 1, actual: 0\n\tat org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest.testShouldNotResolveWhenArtifactResolutionExceptionThrown(ArtifactLocatorStrategyTest.java:496)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest",
                        "method": "testShouldNotResolveWhenArtifactNotFoundExceptionThrown",
                        "exn_type": "java.lang.AssertionError",
                        "stack_trace": "java.lang.AssertionError: \n\n  Unexpected method call ArtifactFactory.createArtifactWithClassifier(\"group\", \"artifact\", \"version\", \"jar\", null):\n    ArtifactFactory.createArtifact(\"group\", \"artifact\", \"version\", null, \"jar\"): expected: 1, actual: 0\n\tat org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest.testShouldNotResolveSpecToArtifactWithNullFile(ArtifactLocatorStrategyTest.java:406)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest",
                        "method": "testShouldNotResolveWhenArtifactResolutionExceptionThrown",
                        "exn_type": "java.lang.AssertionError",
                        "stack_trace": "java.lang.AssertionError: \n\n  Unexpected method call ArtifactFactory.createArtifactWithClassifier(\"group\", \"artifact\", \"version\", \"jar\", null):\n    ArtifactFactory.createArtifact(\"group\", \"artifact\", \"version\", null, \"jar\"): expected: 1, actual: 0\n\tat org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest.testShouldNotResolveSpecToArtifactWithNullFile(ArtifactLocatorStrategyTest.java:406)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest",
                        "method": "testShouldNotResolveWhenArtifactNotFoundExceptionThrown",
                        "exn_type": "java.lang.AssertionError",
                        "stack_trace": "java.lang.AssertionError: \n\n  Unexpected method call ArtifactFactory.createArtifactWithClassifier(\"group\", \"artifact\", \"version\", \"zip\", null):\n    ArtifactFactory.createArtifact(\"group\", \"artifact\", \"version\", null, \"zip\"): expected: 1, actual: 0\n\tat org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest.testShouldResolveSpecWithFourTokens(ArtifactLocatorStrategyTest.java:228)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest",
                        "method": "testShouldNotResolveWhenArtifactResolutionExceptionThrown",
                        "exn_type": "java.lang.AssertionError",
                        "stack_trace": "java.lang.AssertionError: \n\n  Unexpected method call ArtifactFactory.createArtifactWithClassifier(\"group\", \"artifact\", \"version\", \"jar\", null):\n    ArtifactFactory.createArtifact(\"group\", \"artifact\", \"version\", null, \"jar\"): expected: 1, actual: 0\n\tat org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest.testShouldResolveSpecWithThreeTokensUsingDefaultType(ArtifactLocatorStrategyTest.java:140)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest",
                        "method": "testShouldResolveSpecWithFourTokens",
                        "exn_type": "java.lang.AssertionError",
                        "stack_trace": "java.lang.AssertionError: \n\n  Unexpected method call ArtifactFactory.createArtifactWithClassifier(\"group\", \"artifact\", \"version\", \"zip\", null):\n    ArtifactFactory.createArtifact(\"group\", \"artifact\", \"version\", null, \"zip\"): expected: 1, actual: 0\n\tat org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest.testShouldResolveSpecWithThreeTokensUsingCustomizedDefaultType(ArtifactLocatorStrategyTest.java:184)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest",
                        "method": "testShouldNotResolveWhenArtifactNotFoundExceptionThrown",
                        "exn_type": "java.lang.AssertionError",
                        "stack_trace": "java.lang.AssertionError: \n\n  Unexpected method call ArtifactFactory.createArtifactWithClassifier(\"group\", \"artifact\", \"version\", \"jar\", null):\n    ArtifactFactory.createArtifact(\"group\", \"artifact\", \"version\", null, \"jar\"): expected: 1, actual: 0\n\tat org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest.testShouldResolveSpecWithThreeTokensUsingDefaultType(ArtifactLocatorStrategyTest.java:140)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest",
                        "method": "testShouldNotResolveWhenArtifactResolutionExceptionThrown",
                        "exn_type": "java.lang.AssertionError",
                        "stack_trace": "java.lang.AssertionError: \n\n  Unexpected method call ArtifactFactory.createArtifactWithClassifier(\"group\", \"artifact\", \"version\", \"zip\", null):\n    ArtifactFactory.createArtifact(\"group\", \"artifact\", \"version\", null, \"zip\"): expected: 1, actual: 0\n\tat org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest.testShouldResolveSpecWithFourTokens(ArtifactLocatorStrategyTest.java:228)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest",
                        "method": "testShouldResolveSpecWithThreeTokensUsingDefaultType",
                        "exn_type": "java.lang.AssertionError",
                        "stack_trace": "java.lang.AssertionError: \n\n  Unexpected method call ArtifactFactory.createArtifactWithClassifier(\"group\", \"artifact\", \"version\", \"jar\", null):\n    ArtifactFactory.createArtifact(\"group\", \"artifact\", \"version\", null, \"jar\"): expected: 1, actual: 0\n\tat org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest.testShouldNotResolveWhenArtifactResolutionExceptionThrown(ArtifactLocatorStrategyTest.java:496)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest",
                        "method": "testShouldResolveSpecWithThreeTokensUsingDefaultType",
                        "exn_type": "java.lang.AssertionError",
                        "stack_trace": "java.lang.AssertionError: \n\n  Unexpected method call ArtifactFactory.createArtifactWithClassifier(\"group\", \"artifact\", \"version\", \"jar\", null):\n    ArtifactFactory.createArtifact(\"group\", \"artifact\", \"version\", null, \"jar\"): expected: 1, actual: 0\n\tat org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest.testShouldNotResolveWhenArtifactNotFoundExceptionThrown(ArtifactLocatorStrategyTest.java:450)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest",
                        "method": "testShouldNotResolveSpecToArtifactWithNullFile",
                        "exn_type": "java.lang.AssertionError",
                        "stack_trace": "java.lang.AssertionError: \n\n  Unexpected method call ArtifactFactory.createArtifactWithClassifier(\"group\", \"artifact\", \"version\", \"jar\", null):\n    ArtifactFactory.createArtifact(\"group\", \"artifact\", \"version\", null, \"jar\"): expected: 1, actual: 0\n\tat org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest.testShouldNotResolveWhenArtifactNotFoundExceptionThrown(ArtifactLocatorStrategyTest.java:450)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest",
                        "method": "testShouldResolveSpecWithFourTokens",
                        "exn_type": "java.lang.AssertionError",
                        "stack_trace": "java.lang.AssertionError: \n\n  Unexpected method call ArtifactFactory.createArtifactWithClassifier(\"group\", \"artifact\", \"version\", \"jar\", null):\n    ArtifactFactory.createArtifact(\"group\", \"artifact\", \"version\", null, \"jar\"): expected: 1, actual: 0\n\tat org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest.testShouldNotResolveSpecToArtifactWithNullFile(ArtifactLocatorStrategyTest.java:406)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest",
                        "method": "testShouldNotResolveSpecToArtifactWithNullFile",
                        "exn_type": "java.lang.AssertionError",
                        "stack_trace": "java.lang.AssertionError: \n\n  Unexpected method call ArtifactFactory.createArtifactWithClassifier(\"group\", \"artifact\", \"version\", \"jar\", null):\n    ArtifactFactory.createArtifact(\"group\", \"artifact\", \"version\", null, \"jar\"): expected: 1, actual: 0\n\tat org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest.testShouldNotResolveWhenArtifactResolutionExceptionThrown(ArtifactLocatorStrategyTest.java:496)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest",
                        "method": "testShouldResolveSpecWithFourTokens",
                        "exn_type": "java.lang.AssertionError",
                        "stack_trace": "java.lang.AssertionError: \n\n  Unexpected method call ArtifactFactory.createArtifactWithClassifier(\"group\", \"artifact\", \"version\", \"zip\", null):\n    ArtifactFactory.createArtifact(\"group\", \"artifact\", \"version\", null, \"zip\"): expected: 1, actual: 0\n\tat org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest.testShouldResolveSpecWithFourTokens(ArtifactLocatorStrategyTest.java:228)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest",
                        "method": "testShouldResolveSpecWithThreeTokensUsingCustomizedDefaultType",
                        "exn_type": "java.lang.AssertionError",
                        "stack_trace": "java.lang.AssertionError: \n\n  Unexpected method call ArtifactFactory.createArtifactWithClassifier(\"group\", \"artifact\", \"version\", \"jar\", null):\n    ArtifactFactory.createArtifact(\"group\", \"artifact\", \"version\", null, \"jar\"): expected: 1, actual: 0\n\tat org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest.testShouldNotResolveWhenArtifactResolutionExceptionThrown(ArtifactLocatorStrategyTest.java:496)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest",
                        "method": "testShouldResolveSpecWithFourTokens",
                        "exn_type": "java.lang.AssertionError",
                        "stack_trace": "java.lang.AssertionError: \n\n  Unexpected method call ArtifactFactory.createArtifactWithClassifier(\"group\", \"artifact\", \"version\", \"jar\", null):\n    ArtifactFactory.createArtifact(\"group\", \"artifact\", \"version\", null, \"jar\"): expected: 1, actual: 0\n\tat org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest.testShouldResolveSpecWithThreeTokensUsingDefaultType(ArtifactLocatorStrategyTest.java:140)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest",
                        "method": "testShouldResolveSpecWithThreeTokensUsingCustomizedDefaultType",
                        "exn_type": "java.lang.AssertionError",
                        "stack_trace": "java.lang.AssertionError: \n\n  Unexpected method call ArtifactFactory.createArtifactWithClassifier(\"group\", \"artifact\", \"version\", \"jar\", null):\n    ArtifactFactory.createArtifact(\"group\", \"artifact\", \"version\", null, \"jar\"): expected: 1, actual: 0\n\tat org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest.testShouldNotResolveWhenArtifactNotFoundExceptionThrown(ArtifactLocatorStrategyTest.java:450)\n"
                    },
                    {
                        "classname": "org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest",
                        "method": "testShouldResolveSpecWithThreeTokensUsingDefaultType",
                        "exn_type": "java.lang.AssertionError",
                        "stack_trace": "java.lang.AssertionError: \n\n  Unexpected method call ArtifactFactory.createArtifactWithClassifier(\"group\", \"artifact\", \"version\", \"zip\", null):\n    ArtifactFactory.createArtifact(\"group\", \"artifact\", \"version\", null, \"zip\"): expected: 1, actual: 0\n\tat org.apache.maven.shared.io.location.ArtifactLocatorStrategyTest.testShouldResolveSpecWithThreeTokensUsingCustomizedDefaultType(ArtifactLocatorStrategyTest.java:184)\n"
                    }
                ]
            },
            "patches": [],
            "time_to_generate_patches": 0
        }
    ],
    "repository_info": null
}