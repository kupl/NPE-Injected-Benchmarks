/*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements. See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership. The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License. You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied. See the License for the
* specific language governing permissions and limitations
* under the License.
*/

package org.apache.taverna.reference.impl;

import java.util.UUID;

import org.apache.taverna.reference.T2ReferenceGenerator;

/**
 * A T2ReferenceGenerator based on UUIDs. Not as fast as
 * {@link SimpleT2ReferenceGenerator}, but IDs will be globally unique.
 * 
 * @author Stian Soiland-Reyes
 */
public class UUIDT2ReferenceGenerator extends AbstractT2ReferenceGenerator
		implements T2ReferenceGenerator {
	private String namespace = "uuid";

	/**
	 * Set the namespace for identifiers generated by this class as a string
	 * 
	 * @param newNamespace
	 *            the namespace to use
	 */
	public void setNamespace(String newNamespace) {
		this.namespace = newNamespace;
	}
	
	@Override
	public String getNamespace() {
		return namespace;
	}

	@Override
	protected String getNextLocalPart() {
		return UUID.randomUUID().toString();
	}
}
